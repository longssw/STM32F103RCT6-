; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\..\output\bsp_led.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\bsp_led.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\led -I..\..\FreeRTOS\include -I..\..\FreeRTOS\port\RVDS\ARM_CM3 -I..\..\User\key -I..\..\User\uart -I..\..\Application -I..\..\BSP -I..\..\BSP\easylogger\inc -I..\..\BSP\easylogger\port -I..\..\BSP\easylogger\src -I..\..\BSP\eMPL -ID:\01-stm32单片机\04-当前项目\ROS小车\Project\Project\RTOS\v1.3TB6612电机驱动\Project\RVMDK（uv5）\RTE -ID:\00-Software\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\00-Software\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\bsp_led.crf ..\..\User\Led\bsp_led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  led_setup PROC
;;;64     
;;;65     void led_setup(led_t *led, uint16_t buf[])
000000  60c1              STR      r1,[r0,#0xc]
;;;66     {
;;;67     	led->pbuf = buf;
;;;68     	led->time = *(led->pbuf + 1);
000002  8849              LDRH     r1,[r1,#2]
000004  8101              STRH     r1,[r0,#8]
;;;69     }
000006  4770              BX       lr
;;;70     
                          ENDP

                  led_proc PROC
;;;71     void led_proc(led_t *led)
000008  8901              LDRH     r1,[r0,#8]
;;;72     {
00000a  b109              CBZ      r1,|L1.16|
00000c  1e49              SUBS     r1,r1,#1
;;;73     	if (led->time)
;;;74     	{
;;;75     		led->time--;
00000e  e011              B        |L1.52|
                  |L1.16|
;;;76     	}
;;;77     	else
;;;78     	{
;;;79     		if (*(led->pbuf + 2) == LED_EFFECT_END)
000010  68c1              LDR      r1,[r0,#0xc]
000012  888a              LDRH     r2,[r1,#4]
000014  f5a2437f          SUB      r3,r2,#0xff00
000018  3bfe              SUBS     r3,r3,#0xfe
00001a  d00c              BEQ      |L1.54|
00001c  1d09              ADDS     r1,r1,#4
;;;80     		{
;;;81     		}
;;;82     		else
;;;83     		{
;;;84     			led->pbuf += 2;
;;;85     			if (*led->pbuf == LED_EFFECT_AGN)
00001e  60c1              STR      r1,[r0,#0xc]
000020  880a              LDRH     r2,[r1,#0]
000022  f5a2437f          SUB      r3,r2,#0xff00
000026  3bff              SUBS     r3,r3,#0xff
000028  d103              BNE      |L1.50|
;;;86     			{
;;;87     				led->pbuf = led->pbuf - (*(led->pbuf + 1) * 2);
00002a  884a              LDRH     r2,[r1,#2]
00002c  eba10182          SUB      r1,r1,r2,LSL #2
000030  60c1              STR      r1,[r0,#0xc]
                  |L1.50|
;;;88     			}
;;;89     			led->time = *(led->pbuf + 1);
000032  8849              LDRH     r1,[r1,#2]
                  |L1.52|
000034  8101              STRH     r1,[r0,#8]
                  |L1.54|
;;;90     		}
;;;91     	}
;;;92     	ioctl(led, *led->pbuf);
000036  68c1              LDR      r1,[r0,#0xc]
000038  7809              LDRB     r1,[r1,#0]
00003a  f7ffbffe          B.W      ioctl
;;;93     }
;;;94     /*!
                          ENDP

                  led_init PROC
;;;98     
;;;99     void led_init(led_t *led)
00003e  4925              LDR      r1,|L1.212|
;;;100    {
;;;101    	led->pbuf = (uint16_t *)Led_Blink;
;;;102    	led->time = *(led->pbuf + 1);
000040  60c1              STR      r1,[r0,#0xc]
000042  8849              LDRH     r1,[r1,#2]
000044  8101              STRH     r1,[r0,#8]
;;;103    	/* 初始化LED的GPIO */
;;;104    	init(led);
000046  f7ffbffe          B.W      init
;;;105    }
                          ENDP

                  ioctl PROC
;;;48     
;;;49     static void ioctl(led_t *led, uint8_t logic)
00004a  c805              LDM      r0,{r0,r2}
;;;50     {
;;;51     #if LED_TRUE
;;;52     	if (logic)
;;;53     #else
;;;54     	if (!logic)
00004c  2900              CMP      r1,#0
;;;55     #endif
;;;56     	{
;;;57     		GPIO_SetBits(led->GPIOx, led->GPIO); // 高电平
;;;58     	}
;;;59     	else
;;;60     	{
;;;61     		GPIO_ResetBits(led->GPIOx, led->GPIO); // 低电平
00004e  b291              UXTH     r1,r2
000050  d001              BEQ      |L1.86|
000052  f7ffbffe          B.W      GPIO_ResetBits
                  |L1.86|
000056  f7ffbffe          B.W      GPIO_SetBits
;;;62     	}
;;;63     }
;;;64     
                          ENDP

                  init PROC
;;;13     
;;;14     static void init(led_t *led)
00005a  b538              PUSH     {r3-r5,lr}
;;;15     {
00005c  4604              MOV      r4,r0
;;;16     	GPIO_InitTypeDef GPIO_Initure;
;;;17     
;;;18     	// 根据GPIO组初始化GPIO时钟
;;;19     	if (led->GPIOx == GPIOA)
00005e  6800              LDR      r0,[r0,#0]
000060  491d              LDR      r1,|L1.216|
000062  4288              CMP      r0,r1
000064  d103              BNE      |L1.110|
;;;20     	{
;;;21     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); // 使能GPIOA时钟
000066  2101              MOVS     r1,#1
000068  2004              MOVS     r0,#4
00006a  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.110|
;;;22     	}
;;;23     	if (led->GPIOx == GPIOB)
00006e  491b              LDR      r1,|L1.220|
000070  6820              LDR      r0,[r4,#0]
000072  4288              CMP      r0,r1
000074  d103              BNE      |L1.126|
;;;24     	{
;;;25     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); // 使能GPIOB时钟
000076  2101              MOVS     r1,#1
000078  2008              MOVS     r0,#8
00007a  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.126|
;;;26     	}
;;;27     	if (led->GPIOx == GPIOC)
00007e  4918              LDR      r1,|L1.224|
000080  6820              LDR      r0,[r4,#0]
000082  4288              CMP      r0,r1
000084  d103              BNE      |L1.142|
;;;28     	{
;;;29     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE); // 使能GPIOC时钟
000086  2101              MOVS     r1,#1
000088  2010              MOVS     r0,#0x10
00008a  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.142|
;;;30     	}
;;;31     	if (led->GPIOx == GPIOD)
00008e  4915              LDR      r1,|L1.228|
000090  6820              LDR      r0,[r4,#0]
000092  4288              CMP      r0,r1
000094  d103              BNE      |L1.158|
;;;32     	{
;;;33     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE); // 使能GPIOD时钟
000096  2101              MOVS     r1,#1
000098  2020              MOVS     r0,#0x20
00009a  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.158|
;;;34     	}
;;;35     	if (led->GPIOx == GPIOE)
00009e  4912              LDR      r1,|L1.232|
0000a0  6820              LDR      r0,[r4,#0]
0000a2  4288              CMP      r0,r1
0000a4  d103              BNE      |L1.174|
;;;36     	{
;;;37     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE); // 使能GPIOE时钟
0000a6  2101              MOVS     r1,#1
0000a8  2040              MOVS     r0,#0x40
0000aa  f7fffffe          BL       RCC_APB2PeriphClockCmd
                  |L1.174|
;;;38     	}
;;;39     
;;;40     	// GPIO_LED初始化设置
;;;41     	GPIO_Initure.GPIO_Pin = led->GPIO;
0000ae  88a0              LDRH     r0,[r4,#4]
0000b0  f8ad0000          STRH     r0,[sp,#0]
;;;42     	GPIO_Initure.GPIO_Speed = GPIO_Speed_50MHz;
0000b4  2003              MOVS     r0,#3
0000b6  f88d0002          STRB     r0,[sp,#2]
;;;43     	GPIO_Initure.GPIO_Mode = GPIO_Mode_Out_PP; // 通用推挽输出
0000ba  2010              MOVS     r0,#0x10
0000bc  f88d0003          STRB     r0,[sp,#3]
;;;44     	GPIO_Init(led->GPIOx, &GPIO_Initure);
0000c0  4669              MOV      r1,sp
0000c2  6820              LDR      r0,[r4,#0]
0000c4  f7fffffe          BL       GPIO_Init
;;;45     	/* 关LED */
;;;46     	ioctl(led, 0);
0000c8  2100              MOVS     r1,#0
0000ca  4620              MOV      r0,r4
0000cc  f7fffffe          BL       ioctl
;;;47     }
0000d0  bd38              POP      {r3-r5,pc}
;;;48     
                          ENDP

0000d2  0000              DCW      0x0000
                  |L1.212|
                          DCD      ||.data||
                  |L1.216|
                          DCD      0x40010800
                  |L1.220|
                          DCD      0x40010c00
                  |L1.224|
                          DCD      0x40011000
                  |L1.228|
                          DCD      0x40011400
                  |L1.232|
                          DCD      0x40011800

                          AREA ||.data||, DATA, ALIGN=1

                  Led_Blink
000000  0001000a          DCW      0x0001,0x000a
000004  0000000a          DCW      0x0000,0x000a
000008  0001000a          DCW      0x0001,0x000a
00000c  000000d2          DCW      0x0000,0x00d2
000010  ffff0004          DCW      0xffff,0x0004
