; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\..\output\stm32f10x_it.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\led -I..\..\FreeRTOS\include -I..\..\FreeRTOS\port\RVDS\ARM_CM3 -I..\..\User\key -I..\..\User\uart -I..\..\Application -I..\..\BSP -I..\..\BSP\easylogger\inc -I..\..\BSP\easylogger\port -I..\..\BSP\easylogger\src -I..\..\BSP\eMPL -ID:\01-stm32单片机\04-当前项目\ROS小车\Project\Project\RTOS\v1.3TB6612电机驱动\Project\RVMDK（uv5）\RTE -ID:\00-Software\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\00-Software\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\stm32f10x_it.crf ..\..\User\stm32f10x_it.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;51       */
;;;52     void NMI_Handler(void)
000000  4770              BX       lr
;;;53     {
;;;54     }
;;;55     
                          ENDP

                  HardFault_Handler PROC
                  |L1.2|
;;;60       */
;;;61     void HardFault_Handler(void)
000002  e7fe              B        |L1.2|
;;;62     {
;;;63       /* Go to infinite loop when Hard Fault exception occurs */
;;;64       while (1)
;;;65       {
;;;66       }
;;;67     }
;;;68     
                          ENDP

                  MemManage_Handler PROC
                  |L1.4|
;;;73       */
;;;74     void MemManage_Handler(void)
000004  e7fe              B        |L1.4|
;;;75     {
;;;76       /* Go to infinite loop when Memory Manage exception occurs */
;;;77       while (1)
;;;78       {
;;;79       }
;;;80     }
;;;81     
                          ENDP

                  BusFault_Handler PROC
                  |L1.6|
;;;86       */
;;;87     void BusFault_Handler(void)
000006  e7fe              B        |L1.6|
;;;88     {
;;;89       /* Go to infinite loop when Bus Fault exception occurs */
;;;90       while (1)
;;;91       {
;;;92       }
;;;93     }
;;;94     
                          ENDP

                  UsageFault_Handler PROC
                  |L1.8|
;;;99       */
;;;100    void UsageFault_Handler(void)
000008  e7fe              B        |L1.8|
;;;101    {
;;;102      /* Go to infinite loop when Usage Fault exception occurs */
;;;103      while (1)
;;;104      {
;;;105      }
;;;106    }
;;;107    
                          ENDP

                  DebugMon_Handler PROC
;;;121      */
;;;122    void DebugMon_Handler(void)
00000a  4770              BX       lr
;;;123    {
;;;124    }
;;;125    
                          ENDP

                  SysTick_Handler PROC
;;;141    //systick中断服务函数
;;;142    void SysTick_Handler(void)
00000c  b510              PUSH     {r4,lr}
;;;143    {	
;;;144        #if (INCLUDE_xTaskGetSchedulerState  == 1 )
;;;145          if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
00000e  f7fffffe          BL       xTaskGetSchedulerState
000012  2801              CMP      r0,#1
000014  d003              BEQ      |L1.30|
;;;146          {
;;;147        #endif  /* INCLUDE_xTaskGetSchedulerState */  
;;;148            xPortSysTickHandler();
000016  e8bd4010          POP      {r4,lr}
00001a  f7ffbffe          B.W      xPortSysTickHandler
                  |L1.30|
;;;149        #if (INCLUDE_xTaskGetSchedulerState  == 1 )
;;;150          }
;;;151        #endif  /* INCLUDE_xTaskGetSchedulerState */
;;;152    }
00001e  bd10              POP      {r4,pc}
;;;153    
                          ENDP

