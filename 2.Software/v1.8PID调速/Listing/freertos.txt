; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\..\output\freertos.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\freertos.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\led -I..\..\FreeRTOS\include -I..\..\FreeRTOS\port\RVDS\ARM_CM3 -I..\..\User\key -I..\..\User\uart -I..\..\Application -I..\..\BSP -I..\..\BSP\easylogger\inc -I..\..\BSP\easylogger\port -I..\..\BSP\easylogger\src -I..\..\BSP\eMPL -ID:\01-stm32单片机\04-当前项目\ROS小车\Project\Project\RTOS\v1.3TB6612电机驱动\Project\RVMDK（uv5）\RTE -ID:\00-Software\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\00-Software\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\freertos.crf ..\..\User\freertos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;41      **********************************************************************/
;;;42     void AppTaskCreate(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;43     {
;;;44       BaseType_t xReturn = pdPASS; /* 定义一个创建信息返回值，默认为pdPASS */
;;;45     
;;;46       taskENTER_CRITICAL(); // 进入临界区
000002  f7fffffe          BL       vPortEnterCritical
;;;47     
;;;48       /* 创建LED任务 */
;;;49       xReturn = xTaskCreate((TaskFunction_t)led_task,          /* 任务入口函数 */
000006  4c38              LDR      r4,|L1.232|
000008  2503              MOVS     r5,#3
00000a  e9cd5400          STRD     r5,r4,[sp,#0]
00000e  f44f7600          MOV      r6,#0x200
000012  2300              MOVS     r3,#0
000014  4632              MOV      r2,r6
000016  a135              ADR      r1,|L1.236|
000018  4837              LDR      r0,|L1.248|
00001a  f7fffffe          BL       xTaskCreate
;;;50                             (const char *)"led_task",          /* 任务名字 */
;;;51                             (uint16_t)512,                     /* 任务栈大小 */
;;;52                             (void *)NULL,                      /* 任务入口函数参数 */
;;;53                             (UBaseType_t)3,                    /* 任务的优先级 */
;;;54                             (TaskHandle_t *)&Led_Task_Handle); /* 任务控制块指针 */
;;;55       if (pdPASS == xReturn)
00001e  2801              CMP      r0,#1
000020  d109              BNE      |L1.54|
;;;56         log_i("creat led task succeed!");
000022  a136              ADR      r1,|L1.252|
000024  2038              MOVS     r0,#0x38
000026  e9cd0100          STRD     r0,r1,[sp,#0]
00002a  4b3a              LDR      r3,|L1.276|
00002c  a23a              ADR      r2,|L1.280|
00002e  a140              ADR      r1,|L1.304|
000030  2003              MOVS     r0,#3
000032  f7fffffe          BL       elog_output
                  |L1.54|
;;;57     
;;;58       /* 创建KEY任务 */
;;;59       xReturn = xTaskCreate((TaskFunction_t)key_task,          /* 任务入口函数 */
000036  e9cd5400          STRD     r5,r4,[sp,#0]
00003a  2300              MOVS     r3,#0
00003c  4632              MOV      r2,r6
00003e  a13f              ADR      r1,|L1.316|
000040  4841              LDR      r0,|L1.328|
000042  f7fffffe          BL       xTaskCreate
;;;60                             (const char *)"key_task",          /* 任务名字 */
;;;61                             (uint16_t)512,                     /* 任务栈大小 */
;;;62                             (void *)NULL,                      /* 任务入口函数参数 */
;;;63                             (UBaseType_t)3,                    /* 任务的优先级 */
;;;64                             (TaskHandle_t *)&Led_Task_Handle); /* 任务控制块指针 */
;;;65       if (pdPASS == xReturn)
000046  2801              CMP      r0,#1
000048  d109              BNE      |L1.94|
;;;66         log_i("creat key task succeed!");
00004a  a140              ADR      r1,|L1.332|
00004c  2042              MOVS     r0,#0x42
00004e  e9cd0100          STRD     r0,r1,[sp,#0]
000052  4b30              LDR      r3,|L1.276|
000054  a230              ADR      r2,|L1.280|
000056  a136              ADR      r1,|L1.304|
000058  2003              MOVS     r0,#3
00005a  f7fffffe          BL       elog_output
                  |L1.94|
;;;67       /* 创建OELD任务 */
;;;68       xReturn = xTaskCreate((TaskFunction_t)oled_task,         /* 任务入口函数 */
00005e  e9cd5400          STRD     r5,r4,[sp,#0]
000062  2300              MOVS     r3,#0
000064  4632              MOV      r2,r6
000066  a13f              ADR      r1,|L1.356|
000068  4841              LDR      r0,|L1.368|
00006a  f7fffffe          BL       xTaskCreate
;;;69                             (const char *)"oled_task",         /* 任务名字 */
;;;70                             (uint16_t)512,                     /* 任务栈大小 */
;;;71                             (void *)NULL,                      /* 任务入口函数参数 */
;;;72                             (UBaseType_t)3,                    /* 任务的优先级 */
;;;73                             (TaskHandle_t *)&Led_Task_Handle); /* 任务控制块指针 */
;;;74       if (pdPASS == xReturn)
00006e  2801              CMP      r0,#1
000070  d109              BNE      |L1.134|
;;;75         log_i("creat oled task succeed!");
000072  a140              ADR      r1,|L1.372|
000074  204b              MOVS     r0,#0x4b
000076  e9cd0100          STRD     r0,r1,[sp,#0]
00007a  4b26              LDR      r3,|L1.276|
00007c  a226              ADR      r2,|L1.280|
00007e  a12c              ADR      r1,|L1.304|
000080  2003              MOVS     r0,#3
000082  f7fffffe          BL       elog_output
                  |L1.134|
;;;76       /* 创建MPU6050任务 */
;;;77       xReturn = xTaskCreate((TaskFunction_t)mpu6050_task,      /* 任务入口函数 */
000086  e9cd5400          STRD     r5,r4,[sp,#0]
00008a  2300              MOVS     r3,#0
00008c  4632              MOV      r2,r6
00008e  a140              ADR      r1,|L1.400|
000090  4843              LDR      r0,|L1.416|
000092  f7fffffe          BL       xTaskCreate
;;;78                             (const char *)"mpu6050_task",      /* 任务名字 */
;;;79                             (uint16_t)512,                     /* 任务栈大小 */
;;;80                             (void *)NULL,                      /* 任务入口函数参数 */
;;;81                             (UBaseType_t)3,                    /* 任务的优先级 */
;;;82                             (TaskHandle_t *)&Led_Task_Handle); /* 任务控制块指针 */
;;;83       if (pdPASS == xReturn)
000096  2801              CMP      r0,#1
000098  d109              BNE      |L1.174|
;;;84         log_i("creat mpu6050 task succeed!\n");
00009a  a142              ADR      r1,|L1.420|
00009c  2054              MOVS     r0,#0x54
00009e  e9cd0100          STRD     r0,r1,[sp,#0]
0000a2  4b1c              LDR      r3,|L1.276|
0000a4  a21c              ADR      r2,|L1.280|
0000a6  a122              ADR      r1,|L1.304|
0000a8  2003              MOVS     r0,#3
0000aa  f7fffffe          BL       elog_output
                  |L1.174|
;;;85       /* 创建MPU6050任务 */
;;;86       xReturn = xTaskCreate((TaskFunction_t)motor_task,      /* 任务入口函数 */
0000ae  e9cd5400          STRD     r5,r4,[sp,#0]
0000b2  2300              MOVS     r3,#0
0000b4  4632              MOV      r2,r6
0000b6  a143              ADR      r1,|L1.452|
0000b8  4845              LDR      r0,|L1.464|
0000ba  f7fffffe          BL       xTaskCreate
;;;87                             (const char *)"motor_task",      /* 任务名字 */
;;;88                             (uint16_t)512,                     /* 任务栈大小 */
;;;89                             (void *)NULL,                      /* 任务入口函数参数 */
;;;90                             (UBaseType_t)3,                    /* 任务的优先级 */
;;;91                             (TaskHandle_t *)&Led_Task_Handle); /* 任务控制块指针 */
;;;92       if (pdPASS == xReturn)
0000be  2801              CMP      r0,#1
0000c0  d109              BNE      |L1.214|
;;;93         log_i("creat motor task succeed!\n");
0000c2  a144              ADR      r1,|L1.468|
0000c4  205d              MOVS     r0,#0x5d
0000c6  e9cd0100          STRD     r0,r1,[sp,#0]
0000ca  4b12              LDR      r3,|L1.276|
0000cc  a212              ADR      r2,|L1.280|
0000ce  a118              ADR      r1,|L1.304|
0000d0  2003              MOVS     r0,#3
0000d2  f7fffffe          BL       elog_output
                  |L1.214|
;;;94       vTaskDelete(AppTaskCreate_Handle); // 删除AppTaskCreate任务
0000d6  4804              LDR      r0,|L1.232|
0000d8  1f00              SUBS     r0,r0,#4
0000da  6800              LDR      r0,[r0,#0]  ; AppTaskCreate_Handle
0000dc  f7fffffe          BL       vTaskDelete
;;;95     
;;;96       taskEXIT_CRITICAL(); // 退出临界区
0000e0  e8bd407c          POP      {r2-r6,lr}
0000e4  f7ffbffe          B.W      vPortExitCritical
;;;97     }
                          ENDP

                  |L1.232|
                          DCD      ||.data||+0x4
                  |L1.236|
0000ec  6c65645f          DCB      "led_task",0
0000f0  7461736b
0000f4  00      
0000f5  00                DCB      0
0000f6  00                DCB      0
0000f7  00                DCB      0
                  |L1.248|
                          DCD      led_task
                  |L1.252|
0000fc  63726561          DCB      "creat led task succeed!",0
000100  74206c65
000104  64207461
000108  736b2073
00010c  75636365
000110  65642100
                  |L1.276|
                          DCD      ||.constdata||
                  |L1.280|
000118  2e2e5c2e          DCB      "..\\..\\User\\freertos.c",0
00011c  2e5c5573
000120  65725c66
000124  72656572
000128  746f732e
00012c  6300    
00012e  00                DCB      0
00012f  00                DCB      0
                  |L1.304|
000130  66726565          DCB      "freertos.c",0
000134  72746f73
000138  2e6300  
00013b  00                DCB      0
                  |L1.316|
00013c  6b65795f          DCB      "key_task",0
000140  7461736b
000144  00      
000145  00                DCB      0
000146  00                DCB      0
000147  00                DCB      0
                  |L1.328|
                          DCD      key_task
                  |L1.332|
00014c  63726561          DCB      "creat key task succeed!",0
000150  74206b65
000154  79207461
000158  736b2073
00015c  75636365
000160  65642100
                  |L1.356|
000164  6f6c6564          DCB      "oled_task",0
000168  5f746173
00016c  6b00    
00016e  00                DCB      0
00016f  00                DCB      0
                  |L1.368|
                          DCD      oled_task
                  |L1.372|
000174  63726561          DCB      "creat oled task succeed!",0
000178  74206f6c
00017c  65642074
000180  61736b20
000184  73756363
000188  65656421
00018c  00      
00018d  00                DCB      0
00018e  00                DCB      0
00018f  00                DCB      0
                  |L1.400|
000190  6d707536          DCB      "mpu6050_task",0
000194  3035305f
000198  7461736b
00019c  00      
00019d  00                DCB      0
00019e  00                DCB      0
00019f  00                DCB      0
                  |L1.416|
                          DCD      mpu6050_task
                  |L1.420|
0001a4  63726561          DCB      "creat mpu6050 task succeed!\n",0
0001a8  74206d70
0001ac  75363035
0001b0  30207461
0001b4  736b2073
0001b8  75636365
0001bc  6564210a
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L1.452|
0001c4  6d6f746f          DCB      "motor_task",0
0001c8  725f7461
0001cc  736b00  
0001cf  00                DCB      0
                  |L1.464|
                          DCD      motor_task
                  |L1.468|
0001d4  63726561          DCB      "creat motor task succeed!\n",0
0001d8  74206d6f
0001dc  746f7220
0001e0  7461736b
0001e4  20737563
0001e8  63656564
0001ec  210a00  
0001ef  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __FUNCTION__
000000  41707054          DCB      0x41,0x70,0x70,0x54
000004  61736b43          DCB      0x61,0x73,0x6b,0x43
000008  72656174          DCB      0x72,0x65,0x61,0x74
00000c  6500              DCB      0x65,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  AppTaskCreate_Handle
                          DCD      0x00000000
                  Led_Task_Handle
                          DCD      0x00000000
