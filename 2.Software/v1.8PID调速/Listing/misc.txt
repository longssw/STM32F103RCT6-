; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\..\output\misc.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\misc.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\led -I..\..\FreeRTOS\include -I..\..\FreeRTOS\port\RVDS\ARM_CM3 -I..\..\User\key -I..\..\User\uart -I..\..\Application -I..\..\BSP -I..\..\BSP\easylogger\inc -I..\..\BSP\easylogger\port -I..\..\BSP\easylogger\src -I..\..\BSP\eMPL -ID:\01-stm32单片机\04-当前项目\ROS小车\Project\Project\RTOS\v1.3TB6612电机驱动\Project\RVMDK（uv5）\RTE -ID:\00-Software\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\00-Software\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\misc.crf ..\..\Libraries\FWlib\src\misc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NVIC_PriorityGroupConfig PROC
;;;95       */
;;;96     void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
000000  4928              LDR      r1,|L1.164|
;;;97     {
;;;98       /* Check the parameters */
;;;99       assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
;;;100      
;;;101      /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
;;;102      SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
000002  4308              ORRS     r0,r0,r1
000004  4928              LDR      r1,|L1.168|
000006  6008              STR      r0,[r1,#0]
;;;103    }
000008  4770              BX       lr
;;;104    
                          ENDP

                  NVIC_Init PROC
;;;111      */
;;;112    void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
00000a  b530              PUSH     {r4,r5,lr}
;;;113    {
;;;114      uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
00000c  230f              MOVS     r3,#0xf
;;;115      
;;;116      /* Check the parameters */
;;;117      assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
;;;118      assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
;;;119      assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
;;;120        
;;;121      if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
00000e  78c2              LDRB     r2,[r0,#3]
;;;122      {
;;;123        /* Compute the Corresponding IRQ Priority --------------------------------*/    
;;;124        tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
;;;125        tmppre = (0x4 - tmppriority);
;;;126        tmpsub = tmpsub >> tmppriority;
;;;127    
;;;128        tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
;;;129        tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
;;;130        tmppriority = tmppriority << 0x04;
;;;131            
;;;132        NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
000010  7801              LDRB     r1,[r0,#0]
;;;133        
;;;134        /* Enable the Selected IRQ Channels --------------------------------------*/
;;;135        NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
000012  2501              MOVS     r5,#1
000014  b1f2              CBZ      r2,|L1.84|
000016  4a24              LDR      r2,|L1.168|
000018  6812              LDR      r2,[r2,#0]            ;124
00001a  f10121e0          ADD      r1,r1,#0xe000e000     ;130
00001e  f40262e0          AND      r2,r2,#0x700          ;124
000022  f5c262e0          RSB      r2,r2,#0x700          ;124
000026  0a12              LSRS     r2,r2,#8              ;124
000028  f1c20404          RSB      r4,r2,#4              ;125
00002c  40d3              LSRS     r3,r3,r2              ;126
00002e  7842              LDRB     r2,[r0,#1]            ;128
000030  40a2              LSLS     r2,r2,r4              ;128
000032  7884              LDRB     r4,[r0,#2]            ;129
000034  401c              ANDS     r4,r4,r3              ;129
000036  4314              ORRS     r4,r4,r2              ;129
000038  0122              LSLS     r2,r4,#4              ;130
00003a  f8812400          STRB     r2,[r1,#0x400]        ;132
00003e  7800              LDRB     r0,[r0,#0]
000040  f000011f          AND      r1,r0,#0x1f
000044  408d              LSLS     r5,r5,r1
000046  0940              LSRS     r0,r0,#5
000048  0080              LSLS     r0,r0,#2
00004a  f10020e0          ADD      r0,r0,#0xe000e000
00004e  f8c05100          STR      r5,[r0,#0x100]
;;;136          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;137      }
;;;138      else
;;;139      {
;;;140        /* Disable the Selected IRQ Channels -------------------------------------*/
;;;141        NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
;;;142          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;143      }
;;;144    }
000052  bd30              POP      {r4,r5,pc}
                  |L1.84|
000054  f001001f          AND      r0,r1,#0x1f           ;141
000058  4085              LSLS     r5,r5,r0              ;141
00005a  0948              LSRS     r0,r1,#5              ;141
00005c  0080              LSLS     r0,r0,#2              ;141
00005e  f10020e0          ADD      r0,r0,#0xe000e000     ;141
000062  f8c05180          STR      r5,[r0,#0x180]        ;141
000066  bd30              POP      {r4,r5,pc}
;;;145    
                          ENDP

                  NVIC_SetVectorTable PROC
;;;155      */
;;;156    void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
000068  4a10              LDR      r2,|L1.172|
;;;157    { 
;;;158      /* Check the parameters */
;;;159      assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
;;;160      assert_param(IS_NVIC_OFFSET(Offset));  
;;;161       
;;;162      SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
00006a  4011              ANDS     r1,r1,r2
00006c  4301              ORRS     r1,r1,r0
00006e  480e              LDR      r0,|L1.168|
000070  1f00              SUBS     r0,r0,#4
000072  6001              STR      r1,[r0,#0]
;;;163    }
000074  4770              BX       lr
;;;164    
                          ENDP

                  NVIC_SystemLPConfig PROC
;;;174      */
;;;175    void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
000076  4a0c              LDR      r2,|L1.168|
;;;176    {
;;;177      /* Check the parameters */
;;;178      assert_param(IS_NVIC_LP(LowPowerMode));
;;;179      assert_param(IS_FUNCTIONAL_STATE(NewState));  
;;;180      
;;;181      if (NewState != DISABLE)
;;;182      {
;;;183        SCB->SCR |= LowPowerMode;
000078  1d12              ADDS     r2,r2,#4
00007a  2900              CMP      r1,#0                 ;181
;;;184      }
;;;185      else
;;;186      {
;;;187        SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
00007c  6811              LDR      r1,[r2,#0]
00007e  d001              BEQ      |L1.132|
000080  4301              ORRS     r1,r1,r0              ;183
000082  e000              B        |L1.134|
                  |L1.132|
000084  4381              BICS     r1,r1,r0
                  |L1.134|
000086  6011              STR      r1,[r2,#0]            ;183
;;;188      }
;;;189    }
000088  4770              BX       lr
;;;190    
                          ENDP

                  SysTick_CLKSourceConfig PROC
;;;198      */
;;;199    void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
00008a  f04f21e0          MOV      r1,#0xe000e000
;;;200    {
;;;201      /* Check the parameters */
;;;202      assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
;;;203      if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
00008e  2804              CMP      r0,#4
;;;204      {
;;;205        SysTick->CTRL |= SysTick_CLKSource_HCLK;
;;;206      }
;;;207      else
;;;208      {
;;;209        SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
000090  6908              LDR      r0,[r1,#0x10]
000092  d003              BEQ      |L1.156|
000094  f0200004          BIC      r0,r0,#4
                  |L1.152|
000098  6108              STR      r0,[r1,#0x10]         ;205
;;;210      }
;;;211    }
00009a  4770              BX       lr
                  |L1.156|
00009c  f0400004          ORR      r0,r0,#4              ;205
0000a0  e7fa              B        |L1.152|
;;;212    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L1.164|
                          DCD      0x05fa0000
                  |L1.168|
                          DCD      0xe000ed0c
                  |L1.172|
                          DCD      0x1fffff80
