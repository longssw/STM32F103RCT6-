; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\..\output\stm32f10x_crc.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\led -I..\..\FreeRTOS\include -I..\..\FreeRTOS\port\RVDS\ARM_CM3 -I..\..\User\key -I..\..\User\uart -I..\..\Application -I..\..\BSP -I..\..\BSP\easylogger\inc -I..\..\BSP\easylogger\port -I..\..\BSP\easylogger\src -I..\..\BSP\eMPL -ID:\01-stm32单片机\04-当前项目\ROS小车\Project\Project\RTOS\v1.3TB6612电机驱动\Project\RVMDK（uv5）\RTE -ID:\00-Software\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\00-Software\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\stm32f10x_crc.crf ..\..\Libraries\FWlib\src\stm32f10x_crc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;82       */
;;;83     void CRC_ResetDR(void)
000000  490e              LDR      r1,|L1.60|
;;;84     {
;;;85       /* Reset CRC generator */
;;;86       CRC->CR = CRC_CR_RESET;
000002  2001              MOVS     r0,#1
000004  6088              STR      r0,[r1,#8]
;;;87     }
000006  4770              BX       lr
;;;88     
                          ENDP

                  CRC_CalcCRC PROC
;;;93       */
;;;94     uint32_t CRC_CalcCRC(uint32_t Data)
000008  490c              LDR      r1,|L1.60|
;;;95     {
;;;96       CRC->DR = Data;
00000a  6008              STR      r0,[r1,#0]
;;;97       
;;;98       return (CRC->DR);
00000c  6808              LDR      r0,[r1,#0]
;;;99     }
00000e  4770              BX       lr
;;;100    
                          ENDP

                  CRC_CalcBlockCRC PROC
;;;106      */
;;;107    uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000010  b510              PUSH     {r4,lr}
;;;108    {
;;;109      uint32_t index = 0;
000012  2200              MOVS     r2,#0
;;;110      
;;;111      for(index = 0; index < BufferLength; index++)
;;;112      {
;;;113        CRC->DR = pBuffer[index];
000014  4b09              LDR      r3,|L1.60|
000016  e003              B        |L1.32|
                  |L1.24|
000018  f8504022          LDR      r4,[r0,r2,LSL #2]
00001c  601c              STR      r4,[r3,#0]
00001e  1c52              ADDS     r2,r2,#1
                  |L1.32|
000020  428a              CMP      r2,r1                 ;111
000022  d3f9              BCC      |L1.24|
;;;114      }
;;;115      return (CRC->DR);
000024  6818              LDR      r0,[r3,#0]
;;;116    }
000026  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  CRC_GetCRC PROC
;;;122      */
;;;123    uint32_t CRC_GetCRC(void)
000028  4804              LDR      r0,|L1.60|
;;;124    {
;;;125      return (CRC->DR);
00002a  6800              LDR      r0,[r0,#0]
;;;126    }
00002c  4770              BX       lr
;;;127    
                          ENDP

                  CRC_SetIDRegister PROC
;;;132      */
;;;133    void CRC_SetIDRegister(uint8_t IDValue)
00002e  4903              LDR      r1,|L1.60|
;;;134    {
;;;135      CRC->IDR = IDValue;
000030  7108              STRB     r0,[r1,#4]
;;;136    }
000032  4770              BX       lr
;;;137    
                          ENDP

                  CRC_GetIDRegister PROC
;;;142      */
;;;143    uint8_t CRC_GetIDRegister(void)
000034  4801              LDR      r0,|L1.60|
;;;144    {
;;;145      return (CRC->IDR);
000036  7900              LDRB     r0,[r0,#4]
;;;146    }
000038  4770              BX       lr
;;;147    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x40023000
