; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o..\..\output\elog_utils.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\elog_utils.d --cpu=Cortex-M3 --apcs=interwork --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\led -I..\..\FreeRTOS\include -I..\..\FreeRTOS\port\RVDS\ARM_CM3 -I..\..\User\key -I..\..\User\uart -I..\..\Application -I..\..\BSP -I..\..\BSP\easylogger\inc -I..\..\BSP\easylogger\port -I..\..\BSP\easylogger\src -I..\..\BSP\eMPL -ID:\01-stm32单片机\04-当前项目\ROS小车\Project\Project\RTOS\v1.3TB6612电机驱动\Project\RVMDK（uv5）\RTE -ID:\00-Software\keil\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\00-Software\keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\elog_utils.crf ..\..\BSP\easylogger\src\elog_utils.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  elog_strcpy PROC
;;;40      */
;;;41     size_t elog_strcpy(size_t cur_len, char *dst, const char *src) {
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;42         const char *src_old = src;
;;;43     
;;;44         assert(dst);
000004  f8df91c8          LDR      r9,|L1.464|
000008  f8df81c8          LDR      r8,|L1.468|
00000c  b085              SUB      sp,sp,#0x14           ;41
00000e  000d              MOVS     r5,r1                 ;41
000010  4606              MOV      r6,r0                 ;41
000012  4614              MOV      r4,r2                 ;41
000014  4617              MOV      r7,r2                 ;42
000016  d106              BNE      |L1.38|
000018  f8d83000          LDR      r3,[r8,#0]  ; elog_assert_hook
00001c  b12b              CBZ      r3,|L1.42|
00001e  222c              MOVS     r2,#0x2c
000020  4649              MOV      r1,r9
000022  a06d              ADR      r0,|L1.472|
000024  4798              BLX      r3
                  |L1.38|
;;;45         assert(src);
000026  b17c              CBZ      r4,|L1.72|
000028  e02c              B        |L1.132|
                  |L1.42|
00002a  a26b              ADR      r2,|L1.472|
00002c  9202              STR      r2,[sp,#8]            ;44
00002e  202c              MOVS     r0,#0x2c              ;44
000030  e9cd9003          STRD     r9,r0,[sp,#0xc]       ;44
000034  a369              ADR      r3,|L1.476|
000036  e9cd0300          STRD     r0,r3,[sp,#0]         ;44
00003a  4b65              LDR      r3,|L1.464|
00003c  a270              ADR      r2,|L1.512|
00003e  a17a              ADR      r1,|L1.552|
000040  2000              MOVS     r0,#0                 ;44
000042  f7fffffe          BL       elog_output
                  |L1.70|
000046  e7fe              B        |L1.70|
                  |L1.72|
000048  f8d83000          LDR      r3,[r8,#0]  ; elog_assert_hook
00004c  b123              CBZ      r3,|L1.88|
00004e  222d              MOVS     r2,#0x2d
000050  495f              LDR      r1,|L1.464|
000052  a077              ADR      r0,|L1.560|
000054  4798              BLX      r3
000056  e015              B        |L1.132|
                  |L1.88|
000058  a275              ADR      r2,|L1.560|
00005a  9202              STR      r2,[sp,#8]
00005c  202d              MOVS     r0,#0x2d
00005e  e9cd9003          STRD     r9,r0,[sp,#0xc]
000062  a35e              ADR      r3,|L1.476|
000064  e9cd0300          STRD     r0,r3,[sp,#0]
000068  4b59              LDR      r3,|L1.464|
00006a  a265              ADR      r2,|L1.512|
00006c  a16e              ADR      r1,|L1.552|
00006e  2000              MOVS     r0,#0
000070  f7fffffe          BL       elog_output
                  |L1.116|
000074  e7fe              B        |L1.116|
                  |L1.118|
;;;46     
;;;47         while (*src != 0) {
;;;48             /* make sure destination has enough space */
;;;49             if (cur_len++ < ELOG_LINE_BUF_SIZE) {
000076  4631              MOV      r1,r6
000078  1c76              ADDS     r6,r6,#1
00007a  29ff              CMP      r1,#0xff
00007c  d805              BHI      |L1.138|
;;;50                 *dst++ = *src++;
00007e  f8050b01          STRB     r0,[r5],#1
000082  1c64              ADDS     r4,r4,#1
                  |L1.132|
000084  7820              LDRB     r0,[r4,#0]            ;47
000086  2800              CMP      r0,#0                 ;47
000088  d1f5              BNE      |L1.118|
                  |L1.138|
;;;51             } else {
;;;52                 break;
;;;53             }
;;;54         }
;;;55         return src - src_old;
00008a  1be0              SUBS     r0,r4,r7
                  |L1.140|
;;;56     }
00008c  b005              ADD      sp,sp,#0x14
00008e  e8bd83f0          POP      {r4-r9,pc}
;;;57     
                          ENDP

                  elog_cpyln PROC
;;;66      */
;;;67     size_t elog_cpyln(char *line, const char *log, size_t len) {
000092  e92d47f0          PUSH     {r4-r10,lr}
;;;68         size_t newline_len = strlen(ELOG_NEWLINE_SIGN), copy_size = 0;
;;;69     
;;;70         assert(line);
000096  f8dfa138          LDR      r10,|L1.464|
00009a  f8df9138          LDR      r9,|L1.468|
00009e  b086              SUB      sp,sp,#0x18           ;67
0000a0  4690              MOV      r8,r2                 ;67
0000a2  460c              MOV      r4,r1                 ;67
0000a4  0006              MOVS     r6,r0                 ;67
0000a6  f04f0702          MOV      r7,#2                 ;68
0000aa  f04f0500          MOV      r5,#0                 ;68
0000ae  f10a0a0c          ADD      r10,r10,#0xc
0000b2  d106              BNE      |L1.194|
0000b4  f8d93000          LDR      r3,[r9,#0]  ; elog_assert_hook
0000b8  b12b              CBZ      r3,|L1.198|
0000ba  2246              MOVS     r2,#0x46
0000bc  4651              MOV      r1,r10
0000be  a05d              ADR      r0,|L1.564|
0000c0  4798              BLX      r3
                  |L1.194|
;;;71         assert(log);
0000c2  b184              CBZ      r4,|L1.230|
0000c4  e035              B        |L1.306|
                  |L1.198|
0000c6  a25b              ADR      r2,|L1.564|
0000c8  9202              STR      r2,[sp,#8]            ;70
0000ca  2046              MOVS     r0,#0x46              ;70
0000cc  e9cda003          STRD     r10,r0,[sp,#0xc]      ;70
0000d0  a342              ADR      r3,|L1.476|
0000d2  e9cd0300          STRD     r0,r3,[sp,#0]         ;70
0000d6  4b3e              LDR      r3,|L1.464|
0000d8  a249              ADR      r2,|L1.512|
0000da  330c              ADDS     r3,r3,#0xc            ;70
0000dc  a152              ADR      r1,|L1.552|
0000de  2000              MOVS     r0,#0                 ;70
0000e0  f7fffffe          BL       elog_output
                  |L1.228|
0000e4  e7fe              B        |L1.228|
                  |L1.230|
0000e6  f8d93000          LDR      r3,[r9,#0]  ; elog_assert_hook
0000ea  b12b              CBZ      r3,|L1.248|
0000ec  4938              LDR      r1,|L1.464|
0000ee  2247              MOVS     r2,#0x47
0000f0  310c              ADDS     r1,r1,#0xc
0000f2  a052              ADR      r0,|L1.572|
0000f4  4798              BLX      r3
0000f6  e01c              B        |L1.306|
                  |L1.248|
0000f8  a250              ADR      r2,|L1.572|
0000fa  9202              STR      r2,[sp,#8]
0000fc  2047              MOVS     r0,#0x47
0000fe  e9cda003          STRD     r10,r0,[sp,#0xc]
000102  a336              ADR      r3,|L1.476|
000104  e9cd0300          STRD     r0,r3,[sp,#0]
000108  4b31              LDR      r3,|L1.464|
00010a  a23d              ADR      r2,|L1.512|
00010c  330c              ADDS     r3,r3,#0xc
00010e  a146              ADR      r1,|L1.552|
000110  2000              MOVS     r0,#0
000112  f7fffffe          BL       elog_output
                  |L1.278|
000116  e7fe              B        |L1.278|
                  |L1.280|
;;;72     
;;;73         while (len--) {
;;;74             *line++ = *log++;
000118  f8140b01          LDRB     r0,[r4],#1
00011c  1c6d              ADDS     r5,r5,#1
00011e  f8060b01          STRB     r0,[r6],#1
;;;75             copy_size++;
;;;76             if (copy_size >= newline_len && !strncmp(log - newline_len, ELOG_NEWLINE_SIGN, newline_len)) {
000122  42bd              CMP      r5,r7
000124  d305              BCC      |L1.306|
000126  1be0              SUBS     r0,r4,r7
000128  463a              MOV      r2,r7
00012a  a145              ADR      r1,|L1.576|
00012c  f7fffffe          BL       strncmp
000130  b110              CBZ      r0,|L1.312|
                  |L1.306|
000132  f1b80801          SUBS     r8,r8,#1              ;73
000136  d2ef              BCS      |L1.280|
                  |L1.312|
;;;77                 break;
;;;78             }
;;;79         }
;;;80         return copy_size;
;;;81     }
000138  b006              ADD      sp,sp,#0x18
00013a  4628              MOV      r0,r5                 ;80
00013c  e8bd87f0          POP      {r4-r10,pc}
;;;82     
                          ENDP

                  elog_memcpy PROC
;;;92      */
;;;93     void *elog_memcpy(void *dst, const void *src, size_t count) {
000140  e92d43f0          PUSH     {r4-r9,lr}
;;;94         char *tmp = (char *) dst, *s = (char *) src;
;;;95     
;;;96         assert(dst);
000144  f8df9088          LDR      r9,|L1.464|
000148  f8df8088          LDR      r8,|L1.468|
00014c  b085              SUB      sp,sp,#0x14           ;93
00014e  4616              MOV      r6,r2                 ;93
000150  460c              MOV      r4,r1                 ;93
000152  0007              MOVS     r7,r0                 ;93
000154  4605              MOV      r5,r0                 ;94
000156  f1090917          ADD      r9,r9,#0x17
00015a  d106              BNE      |L1.362|
00015c  f8d83000          LDR      r3,[r8,#0]  ; elog_assert_hook
000160  b12b              CBZ      r3,|L1.366|
000162  2260              MOVS     r2,#0x60
000164  4649              MOV      r1,r9
000166  a01c              ADR      r0,|L1.472|
000168  4798              BLX      r3
                  |L1.362|
;;;97         assert(src);
00016a  b184              CBZ      r4,|L1.398|
00016c  e02c              B        |L1.456|
                  |L1.366|
00016e  a21a              ADR      r2,|L1.472|
000170  9202              STR      r2,[sp,#8]            ;96
000172  2060              MOVS     r0,#0x60              ;96
000174  e9cd9003          STRD     r9,r0,[sp,#0xc]       ;96
000178  a318              ADR      r3,|L1.476|
00017a  e9cd0300          STRD     r0,r3,[sp,#0]         ;96
00017e  4b14              LDR      r3,|L1.464|
000180  a21f              ADR      r2,|L1.512|
000182  3317              ADDS     r3,r3,#0x17           ;96
000184  a128              ADR      r1,|L1.552|
000186  2000              MOVS     r0,#0                 ;96
000188  f7fffffe          BL       elog_output
                  |L1.396|
00018c  e7fe              B        |L1.396|
                  |L1.398|
00018e  f8d83000          LDR      r3,[r8,#0]  ; elog_assert_hook
000192  b12b              CBZ      r3,|L1.416|
000194  490e              LDR      r1,|L1.464|
000196  2261              MOVS     r2,#0x61
000198  3117              ADDS     r1,r1,#0x17
00019a  a025              ADR      r0,|L1.560|
00019c  4798              BLX      r3
00019e  e013              B        |L1.456|
                  |L1.416|
0001a0  a223              ADR      r2,|L1.560|
0001a2  9202              STR      r2,[sp,#8]
0001a4  2061              MOVS     r0,#0x61
0001a6  e9cd9003          STRD     r9,r0,[sp,#0xc]
0001aa  a30c              ADR      r3,|L1.476|
0001ac  e9cd0300          STRD     r0,r3,[sp,#0]
0001b0  4b07              LDR      r3,|L1.464|
0001b2  a213              ADR      r2,|L1.512|
0001b4  3317              ADDS     r3,r3,#0x17
0001b6  a11c              ADR      r1,|L1.552|
0001b8  2000              MOVS     r0,#0
0001ba  f7fffffe          BL       elog_output
                  |L1.446|
0001be  e7fe              B        |L1.446|
                  |L1.448|
;;;98     
;;;99         while (count--)
;;;100            *tmp++ = *s++;
0001c0  f8140b01          LDRB     r0,[r4],#1
0001c4  f8050b01          STRB     r0,[r5],#1
                  |L1.456|
0001c8  1e76              SUBS     r6,r6,#1
0001ca  d2f9              BCS      |L1.448|
;;;101    
;;;102        return dst;
0001cc  4638              MOV      r0,r7
;;;103    }
0001ce  e75d              B        |L1.140|
                          ENDP

                  |L1.464|
                          DCD      ||.constdata||
                  |L1.468|
                          DCD      elog_assert_hook
                  |L1.472|
0001d8  64737400          DCB      "dst",0
                  |L1.476|
0001dc  28257329          DCB      "(%s) has assert failed at %s:%ld.",0
0001e0  20686173
0001e4  20617373
0001e8  65727420
0001ec  6661696c
0001f0  65642061
0001f4  74202573
0001f8  3a256c64
0001fc  2e00    
0001fe  00                DCB      0
0001ff  00                DCB      0
                  |L1.512|
000200  2e2e5c2e          DCB      "..\\..\\BSP\\easylogger\\src\\elog_utils.c",0
000204  2e5c4253
000208  505c6561
00020c  73796c6f
000210  67676572
000214  5c737263
000218  5c656c6f
00021c  675f7574
000220  696c732e
000224  6300    
000226  00                DCB      0
000227  00                DCB      0
                  |L1.552|
000228  656c6f67          DCB      "elog",0
00022c  00      
00022d  00                DCB      0
00022e  00                DCB      0
00022f  00                DCB      0
                  |L1.560|
000230  73726300          DCB      "src",0
                  |L1.564|
000234  6c696e65          DCB      "line",0
000238  00      
000239  00                DCB      0
00023a  00                DCB      0
00023b  00                DCB      0
                  |L1.572|
00023c  6c6f6700          DCB      "log",0
                  |L1.576|
000240  0d0a00            DCB      "\r\n",0
000243  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __FUNCTION__
000000  656c6f67          DCB      0x65,0x6c,0x6f,0x67
000004  5f737472          DCB      0x5f,0x73,0x74,0x72
000008  63707900          DCB      0x63,0x70,0x79,0x00
                  |symbol_number.8|
00000c  656c6f67          DCB      0x65,0x6c,0x6f,0x67
000010  5f637079          DCB      0x5f,0x63,0x70,0x79
000014  6c6e00            DCB      0x6c,0x6e,0x00
                  |symbol_number.9|
000017  65                DCB      0x65
000018  6c6f675f          DCB      0x6c,0x6f,0x67,0x5f
00001c  6d656d63          DCB      0x6d,0x65,0x6d,0x63
000020  707900            DCB      0x70,0x79,0x00
